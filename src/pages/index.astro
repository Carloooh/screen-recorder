---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Screen Recorder">
	<main class="flex flex-col items-center justify-center gap-5 min-h-screen">
        <div class="flex flex-row items-center gap-4">
            <svg class="size-[75px] sm:w-16 sm:h-16" viewBox="0 0 72 72" id="emoji" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
                <g id="SVGRepo_iconCarrier">
                    <g id="color"></g>
                    <g id="line">
                        <circle cx="36" cy="36" r="20" fill="none" stroke="#ffffff" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="2"></circle>
                        <circle cx="36" cy="36" r="7" fill="#ffffff" stroke="none"></circle>
                    </g>
                    <g id="color-foreground">
                        <circle cx="36" cy="36" r="7" fill="#D22F27" stroke="none"></circle>
                    </g>
                </g>
            </svg>
            <h1 class="text-white text-4xl sm:text-3xl">Screen Recorder</h1>
        </div>
        <button class="text-white border border-white bg-transparent py-2 px-4 rounded-full hover:bg-white hover:text-black transition transform">
            Record Screen
        </button>
    </main>
</Layout>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const $button = document.querySelector('button') as HTMLButtonElement;

        if ($button) {
            $button.addEventListener('click', async () => {
                try {
                    const media = await navigator.mediaDevices.getDisplayMedia({
                        video: { frameRate: { ideal: 60 } }
                    });

                    const mediarecorder = new MediaRecorder(media, {
						mimeType: 'video/webm;codecs=vp8,opus'
                    });

                    const chunks: Blob[] = [];
                    mediarecorder.ondataavailable = (event) => {
                        if (event.data.size > 0) {
                            chunks.push(event.data);
                        }
                    };

                    mediarecorder.onstop = () => {
                        const blob = new Blob(chunks, { type: 'video/webm' });
                        const link = document.createElement('a');
                        link.href = URL.createObjectURL(blob);
                        link.download = 'screenRecorded.webm';
                        link.click();
                        URL.revokeObjectURL(link.href);
                    };

                    mediarecorder.start();

                    media.getVideoTracks()[0].addEventListener('ended', () => {
                        mediarecorder.stop();
                    });

                } catch (error) {
                    console.error('Error accessing display media.', error);
                }
            });
        } else {
            console.error('Button element not found.');
        }
    });
</script>